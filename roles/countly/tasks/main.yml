- name: Create countly directory
  file:
      path: /data/wwwroot/
      state: directory 

- name: Install Countly Server
  shell: wget -qO- http://c.ly/install | bash
  args:
    chdir: /data/wwwroot/

- name: Remove Countly Compression Packet
  file:
   path: /data/wwwroot/countly.tar.gz
   state: absent

- name: replace Mongodb Configure
  copy:
    src: mongod.conf
    dest: /etc

- name: move Mongodb path
  shell: mv /var/lib/mongodb /data/mongo/

- name: Restarted Mongodb
  service:
    name: mongod
    state: restarted
    enabled: yes

- name: Install pymongo
  pip:
    name: pymongo

- name: Setting MongoDB Administrator User
  mongodb_user:
    database: admin
    name: root
    password: '{{mongodb_pwd}}'
    roles: root
    state: present

- name: Enable MongoDB authorization
  lineinfile:
    path: /etc/mongod.conf
    regexp: '  authorization: disabled'
    line: '  authorization: enabled'

- name: restart MongoDB
  service: name=mongod state=restarted enabled=yes

- name: Create Countly User
  mongodb_user:
    login_user: root
    login_password: '{{mongodb_pwd}}'
    database: countly
    name: countly
    state: present
    password: websoft9
    roles: readWrite

- name: Setting countly
  copy:
    src: config.js
    dest: /data/wwwroot/countly/frontend/express/config.js

- name: Restart countly server
  service:
    name: countly
    state: restarted
    enabled: yes


- name: Create credentials Folder
  file:
    path: /credentials
    state: directory

- name: Write Databases Password
  template:
    src: password.txt.jinja2
    dest: /credentials/password.txt
    mode: 644

- name: Write rc.local
  shell: echo "#!/bin/bash" > /etc/rc.local

- name: restart rc.local
  service: name=rc.local state=restarted enabled=yes


- name: Databases Random Password
  template: 
    src: init.sh.jinja2
    dest: /root/init.sh
    mode: 0750

- name: Setting Startup
  lineinfile:
    path: /etc/rc.local
    regexp: '/root/init.sh'
    line: '/root/init.sh'
    mode: 0750